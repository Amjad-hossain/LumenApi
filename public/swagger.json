{
    "swagger": "2.0",
    "info": {
        "title": "Rest API",
        "contact": {
            "name": "Md Amjad hossain",
            "url": ""
        },
        "version": "1.0"
    },
    "host": "localhost:8080/",
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "paths": {
        "api/article": {
            "get": {
                "tags": [
                    "Article"
                ],
                "summary": "Find All Articles",
                "description": "Returns article overview.",
                "operationId": "index",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Article overview."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "post": {
                "tags": [
                    "Article"
                ],
                "summary": "Save Articles",
                "description": "",
                "operationId": "saveArticle",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Articles that needs to be added to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Article"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article overview."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "api/article/{id}": {
            "get": {
                "tags": [
                    "Article"
                ],
                "summary": "Find All Articles",
                "description": "Returns article overview.",
                "operationId": "index",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id to filter by",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article overview."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "put": {
                "tags": [
                    "Article"
                ],
                "summary": "Update an existing article",
                "description": "",
                "operationId": "updateArticle",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id to filter by",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Article object that needs to be added to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Article"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Article"
                ],
                "summary": "Delete article",
                "description": "",
                "operationId": "deleteArticle",
                "consumes": [
                    "application/xml",
                    "application/json",
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Article id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid pet value"
                    }
                }
            }
        }
    },
    "definitions": {
        "Error": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "description": "Class ApiController",
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "description": "Class ApiController",
                    "type": "string"
                }
            }
        }
    }
}